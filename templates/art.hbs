<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Artwork Gallery</title>
  <style>
    body {
      font-family: Arial, sans-serif;
      background-image: url('welcome.jpg'); /* Add background image */
      background-size: cover;
      background-repeat: no-repeat;
      background-position: center;
      margin: 0;
      padding: 0;
    }

    h1 {
      text-align: center;
    }
    .container {
      max-width: 900px;
      margin: 50px auto;
      padding: 20px;
      border: 1px solid #493434;
      border-radius: 5px;
      background-color: #f0e9e9;
    }

    .artwork {
      width: calc(25% - 30px); /* Adjust width to fit 4 artworks in a row */
      margin-right: 20px; /* Adjust margin between artworks */
      margin-bottom: 40px; /* Add bottom margin to separate rows */
      display: inline-block;
      vertical-align: top;
      position: relative; /* Add position relative */
    }

    .artwork img {
      width: 80%;
      height: auto;
    }

    .comment-box textarea {
      width: calc(100% - 10px); /* Adjust width */
    }

    .add-to-auction{
      margin-top: 10px;
    }

    .large-button {
      text-align: center;
      margin-top: 20px;
    }

    .large-button a {
      display: inline-block;
      font-size: 48px;
      text-decoration: none;
      color: #007bff;
    }

    .large-button a:hover {
      color: #0056b3;
    }

    .edit-button {
      position: absolute;
      top: 1px;
      right: 1px;
      background-color: #000;
      color: #fff;
      border: 1px solid #000;
      padding: 2px 3px;
      border-radius: 2px;
      cursor: pointer;
    }
  </style>
</head>
<body>

  <div class="container">
    <h1>Artwork Gallery</h1>
    <div id="gallery" class="gallery">
      <!-- Artworks will be dynamically added here -->
    </div>
  </div>
  <script>
    document.addEventListener('DOMContentLoaded', function() {
      // Retrieve artworks from local storage
      let artworks = JSON.parse(localStorage.getItem('artworks')) || [];
  
      // Render artworks in the gallery
      const gallery = document.getElementById('gallery');
      artworks.forEach(function(artwork) {
        // Create artwork element
        const artworkDiv = document.createElement('div');
        artworkDiv.classList.add('artwork');
  
        // Create image element
        const img = document.createElement('img');
        img.src = artwork.image;
        img.alt = artwork.description;
  
        // Create description paragraph
        const description = document.createElement('p');
        description.textContent = artwork.description;
  
        // Create price paragraph
        const price = document.createElement('p');
        price.textContent = 'Price: $' + artwork.price;
  
        // Create place bid button
        const placeBidBtn = document.createElement('button');
        placeBidBtn.textContent = 'Place Bid';
        placeBidBtn.addEventListener('click', function() {
          // Store artwork information in local storage
          localStorage.setItem('currentArtwork', JSON.stringify({
            image: artwork.image,
            description: artwork.description,
            price: artwork.price
          }));

          // Redirect to bid.html
          window.location.href = 'bid.html';
        });
  
        // Create edit button
        const editButton = document.createElement('div');
        editButton.classList.add('edit-button');
        editButton.textContent = '␡';
        editButton.addEventListener('click', function() {
          // Prompt user for their Gmail ID
          const userEmail = prompt('Please enter your Gmail ID:');
          const sellerEmail = localStorage.getItem('sellerEmail');
  
          // Check if the entered Gmail ID matches the seller's email
          if (userEmail === sellerEmail) {
            // Perform removal logic here (remove the artwork from storage)
            const updatedArtworks = artworks.filter(item => item.id !== artwork.id);
            localStorage.setItem('artworks', JSON.stringify(updatedArtworks));
            // Remove the artwork from the DOM
            gallery.removeChild(artworkDiv);
            alert('Artwork removed successfully.');
          } else {
            gallery.removeChild(artworkDiv);
            alert('Unauthorized access. You are not the seller of this artwork.');

            // Redirect or handle unauthorized access as needed
          }
        });
  
        // Append elements to artwork container
        artworkDiv.appendChild(editButton); // Add edit button
        artworkDiv.appendChild(img);
        artworkDiv.appendChild(description);
        artworkDiv.appendChild(price);
        artworkDiv.appendChild(placeBidBtn);
  
        // Append artwork container to the gallery
        gallery.appendChild(artworkDiv);
      });
    });
  </script>
</body>
</html>
